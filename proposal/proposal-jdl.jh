entity Proposal {
	caption String required
    description String required maxlength(10000)
    priority Integer min(1) max(3)
    alikeSum Long
    commentSum Long
    createdDate Instant required
    updatedDate Instant required
    status Status required
}

entity History {
	createdDate Instant required
	status Status required
    comment String required maxlength(10000)
}

entity Tag {
	name String required unique maxlength(50)
}

enum Status {
    NEW, ACCEPTED, REJECTED, POSTPONED, ASSIGNED, RESOLVED
}

entity Comment {
	text String required maxlength(10000)
    createdDate Instant required
}

entity Alike {
	text String maxlength(10)
    createdDate Instant required
}

entity Quotes {
	text String required maxlength(1000)
    author String required
    category String required
}

relationship ManyToOne {
	Proposal{author(login) required} to User,
    History{executive(login) required} to User,
    History{assignee(login)} to User,
    Comment{author(login) required} to User,
    Alike{author(login) required} to User
}

relationship ManyToMany {
    Proposal{tag(name)} to Tag{proposal(caption)}
}

relationship OneToMany {
	Proposal{alike} to Alike{proposal(caption) required},
	Proposal{history(status)} to History{proposal(caption) required},
    Proposal{comment(text)} to Comment{proposal(caption) required}
}


// Set pagination options
// paginate  with infinite-scroll
paginate Proposal, Comment, History, Quotes, Tag, Alike with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Status, Tag

// Set an angular suffix
angularSuffix * with prop
